<%
# Vue pour enregistrer une page
raise_unless_admin
%>
<%= Cnarration::titre_h1("Page (édition)") %>
<% if ONLINE %>
  <p class='air warning'>Les pages de la collection ne peuvent s'éditer qu'en local.</p>
<% else %>
<%
site.require 'form_tools'
form.prefix = "epage"
%>
<%

# ATTENTION !!! NE PAS EMPLOYER `page` QUI SERT AU SITE !!!
def epage
  @epage ||= site.objet
end

if param(:epage).nil?
  if epage.nil?
    param(:epage => Hash::new)
  else
    param(:epage => Cnarration::Page::prepare_edition_of(epage))
  end
end
%>
<%

bouton_edit = "Édit".in_a(class:'btn tiny', onclick:"$.proxy(Cnarration, 'on_edit_by_id', this)();return true;")
bouton_show = "Show".in_a(class:'btn tiny', onclick:"$.proxy(Cnarration, 'on_show', this)()")
bouton_init = "Init new".in_a(class:'btn tiny', onclick:"$.proxy(Cnarration, 'reset_all')();return false")

values_type_select = [
  ['1', "Page"],
  ['2', "Sous-chapitre"],
  ['3', "Chapitre"],
  ['5', "Texte type"]
]

=begin
Rappel :
  1       Tout juste créée
  9      Achevée
=end
values_niveau_developpement_select = [
  ['1', "Création de la page"],
  ['3', "Esquisse"],
  ['5', "Presque achevée"],
  ['7', "À relire"],
  ['9', "Achevée"]
]

# MENU DES LIVRES
options_books = "<option value='0'>Aucun livre</option>"
options_books << Cnarration::LIVRES.collect do |bid, bdata|
  is_selected = bid.to_i == param(:epage)[:livre_id].to_i
  bdata[:hname].in_option(value:bid, selected:is_selected, 'data-folder'=>bdata[:folder])
end.join
menu_books = options_books.in_select(name:"epage[livre_id]", id:"epage_livre_id", onchange:"$.proxy(Cnarration,'on_choose_book', this.value)()")

# OUTILS POUR LE MENU DES LIVRES
# (pour voir la table des matières, etc.)
boutons_books = ("tdm".in_a(class:'btn tiny', onclick:"$.proxy(Cnarration,'got_to_book_tdm', this)()", target:'_blank') +
"Edit Tdm".in_a(class:'btn tiny', onclick:"$.proxy(Cnarration,'got_to_edit_book_tdm', this)()", target:'_blank')).in_span(class:'btns')

%>
<form id="form_edit_page" class="dim2080" action="page/edit?in=cnarration" method="POST" accept-charset="utf8">
  <%= 'edit_page'.in_hidden(name:'operation', id:'operation') %>

  <%# ID de la page %>
  <%= form.field_text("ID", 'id', nil, {class:'short', text_after:"#{bouton_edit}#{bouton_show}#{bouton_init}".in_span(class:'btns')}) %>

  <%# LIVRE %>
  <%= form.field_raw("Livre", 'livre_id', nil, {field: menu_books, text_after: boutons_books}) %>

  <%# TYPE (bit 1 des options) %>
  <%= form.field_select("Type", 'type', nil, {values: values_type_select, onchange:"$.proxy(Cnarration,'on_change_type_page', this.value)()" }) %>

  <%# TITRE %>
  <%= form.field_text("Titre", 'titre') %>

  <%# HANDLER %>
  <%= form.field_text("Path fichier", 'handler', nil, {class:'milong', text_before:"./data/unan/pages_cours/cnarration/<span id='dossier_page'>structure</span>/".in_span(id:"dossier_page_cours", class:'tiny') + "<select id='noms_dossiers' class='tiny' onchange=\"$.proxy(Cnarration, 'on_choose_folder_name')()\"><option value=''>Choisir le dossier…</option></select>"}) %>
  <%= form.field_description("Chemin relatif du fichier à partir du dossier inscrit ci-dessus. Noter que c'est <strong>un fichier Markdown</strong> qui doit être produit et qu'<strong>on n'indique pas son extension</strong> ici, qui sera automatiquement ajoutée.") %>

  <%= form.field_checkbox("Créer le fichier s'il n'existe pas déjà.", 'create_file') %>

  <%# DESCRIPTION %>
  <%= form.field_textarea("Description", 'description') %>

  <%# NIVEAU DÉVELOPPEMENT (bit 2 des options) %>
  <%= form.field_select("Développement", 'nivdev', nil, {values: values_niveau_developpement_select}) %>

  <%= form.submit_button("Enregistrer", onclick:"$.proxy(Cnarration,'on_submit_form')()") %>
</form>
<% end %>
