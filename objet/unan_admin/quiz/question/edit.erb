<%
#
# Pour éditer une question de questionnaire/checkup ou quiz
#
raise_unless_admin
%>
<h2>Question (édition)</h2>
<%
site.require 'form_tools'

# if param(:operation) == 'edit_question'
#   debug "param(:operation) : #{param(:operation).inspect} / ID = #{param(:question)[:id]}"
#   iquestion = Unan::Quiz::Question::new(param(:question)[:id].to_i)
# end

# Y a-t-il un identifiant défini ?
#
# Rappel : L'identifiant peut être défini dans :
#   - dans le paramètre `question_id`
#   - dans la route rest `question/<id>/edit`
#   - dans le param(:question) édité
question_id = (site.current_route.objet_id || param(:question_id) || (param(:question)||Hash::new)[:id]).to_i_inn
if question_id != nil
  debug "question_id : #{question_id}"
  iquestion = Unan::Quiz::Question::new(question_id)
  if iquestion.exist?
    dquestion = iquestion.get_all
    dquestion.merge!(
      type_a: iquestion.type_a,
      type_c: iquestion.type_c
    )
    debug dquestion
  else
    dquestion = iquestion = nil
  end
  param(:question => dquestion)
else
  iquestion = nil
end

form.prefix = "question"
form.objet  = param(:question) || Hash::new # pour le moment

%>
<%
bouton_generate_yaml_file = "Entrer les données à partir d'un fichier YAML".in_a(href:'question/from_yaml?in=unan_admin/quiz')
lien_init_question    = "Init new".in_a(class:'btn small', onclick:"$.proxy(Question, 'init_new')()")
lien_edit_question    = "Edit".in_a(onclick:"$('input#operation').val('edit_question');$('form#form_question_edit').submit();", class:'small btn')
lien_destroy_question = "Détruire".in_a(onclick:"$.proxy(Question,'on_want_destroy')()", class:'small btn warning')
%>
<div class="right small">
  <%= bouton_generate_yaml_file %>
</div>
<form id="form_question_edit" class="dim2080" action="question/edit?in=unan_admin/quiz" method="POST">

  <%= "edit_question".in_hidden(name:'operation', id:'operation') %>

  <%= form.field_text("ID", 'id', nil, {class:'short id_field', text_after: "#{lien_edit_question} #{lien_destroy_question} #{lien_init_question}"}) %>
  <%= form.field_description("Mettre ID à rien pour générer une nouvelle question.") %>

  <%# QUESTION %>
  <%= form.field_text("Question", 'question', nil, {class:'bold'}) %>
  <%= form.field_description("Indiquer la question qui sera posée. Vous pouvez voir sous le formulaire l'aspect que prendra la question (une fois enregistrée).") %>
  <%# RÉPONSES %>
  <div id="reponses"></div>
  <%= form.field_description("Ajouter les réponses en précisant leur nombre de points. S'il y a <strong>une seule bonne réponse</strong>, il faut mettre 0 points aux autres réponses et un nombre de points à la bonne réponse. S'il y a <strong>plusieurs réponses possibles</strong>, on peut mettre différents points, et le plus grand nombre de points sera considéré comme la <strong>meilleure réponse</strong>.<br />Pour <strong>supprimer une réponse</strong>, vider son libellé.") %>
  <%# Bouton pour ajouter une réponse possible %>
  <div class='row air'>
    <span class='libelle'></span>
    <span class='value'>
      <%= " + réponse".in_a(class:'btn small', onclick:"$.proxy(Question,'new_reponse')()") %>
    </span>
  </div>
  <%= "".in_hidden(name:"question[nombre_reponses]", id:"question_nombre_reponses") %>
  <%# Champ caché dans le cas où c'est une édition, pour mettre les réponses dans leur format brut (string) %>
  <textarea id="reponses_json" style="display:none;"><%=
    case form.objet[:reponses]
    when String then form.objet[:reponses]
    else form.objet[:reponses].to_json
    end
  %></textarea>


  <%# TYPE (checkbox ou radio) %>
  <%= form.field_select("Type",      'type_f', nil, {values: Unan::Quiz::TYPES}) %>
  <%= form.field_select("Choix",     'type_c', nil, {values: [['r', "Un seul choix"], ['c', "Plusieurs choix"]]}) %>
  <%= form.field_select("Affichage", 'type_a', nil, {values: [['c', "L'un en dessous de l'autre"], ['l', "En ligne"], ['m', "En menu"]]}) %>

  <%# INDICATION %>
  <%= form.field_textarea("Indication", 'indication', nil) %>
  <%= form.field_description("Cette indication sera écrite en petit sous la question et permettra à l'auteur de mieux comprendre cette question. Notez qu'il y a déjà une indication automatique lorsque ce sont des checkboxes au lieu des boutons-radio.") %>

  <%# RAISON %>
  <%= form.field_textarea("Raison bonne réponse", 'raison', nil) %>
  <%= form.field_description("Dans le cas d'un vrai test, on peut donner ici la raison de la bonne réponse et aussi pourquoi les autres réponses ne sont pas valables.") %>

  <%= form.submit_button("Enregistrer la question", {onclick:"$('form#form_question_edit input#operation').val('save_question')"}) %>
</form>
<%
#
# Si une question est affichée, on montre son aspect
#
if iquestion
%>
  <h3>Aperçu de la question</h3>
  <%= iquestion.output.in_div(id:'aspect') %>
<% end %>
